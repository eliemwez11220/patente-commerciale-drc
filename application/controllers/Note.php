<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Note extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Note_model');
    } 

    /*
     * Listing of notes
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('note/index?');
        $config['total_rows'] = $this->Note_model->get_all_notes_count();
        $this->pagination->initialize($config);

        $data['notes'] = $this->Note_model->get_all_notes($params);
        
        $data['_view'] = 'note/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new note
     */
    function add()
    {   
        $this->form_validation->set_rules('fiche_sid','fiche_sid','required');
        $this->form_validation->set_rules('numero_impot','Numéro Impôt','required');
        $this->form_validation->set_rules('numero_compte_bancaire','numero_compte_bancaire','required');
        $this->form_validation->set_rules('nom_banque','nom_banque','required');
         $this->form_validation->set_rules('montant_impot_du','montant_impot_du','required');
        if($this->form_validation->run())     
        { 
            $current_time=date('Y-m-d H:i:s');
            $params = array(
				'devise_compte' => $this->input->post('devise_compte'),
				'fiche_sid' => $this->input->post('fiche_sid'),
				'numero_reference_note' => $this->input->post('numero_reference_note'),
				'date_creation' => $current_time,
				'numero_impot' => $this->input->post('numero_impot'),
				'numero_compte_bancaire' => $this->input->post('numero_compte_bancaire'),
				'nom_banque' => $this->input->post('nom_banque'),
				'pourcentage_impot' => $this->input->post('pourcentage_impot'),
				'montant_impot_du' => $this->input->post('montant_impot_du'),
				'observation' => $this->input->post('observation'),
            );
            
            $note_id = $this->Note_model->add_note($params);
            redirect('note/index');
        }
        else
        {
			$this->load->model('Fiche_model');
			$data['all_fiches'] = $this->Fiche_model->get_all_fiches();
            
            $data['_view'] = 'note/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a note
     */
    function edit($note_id)
    {   
        // check if the note exists before trying to edit it
        $data['note'] = $this->Note_model->get_note($note_id);
        
        if(isset($data['note']['note_id']))
        {
            $this->form_validation->set_rules('fiche_sid','fiche_sid','required');
        $this->form_validation->set_rules('numero_impot','Numéro Impôt','required');
        $this->form_validation->set_rules('numero_compte_bancaire','numero_compte_bancaire','required');
        $this->form_validation->set_rules('nom_banque','nom_banque','required');
         $this->form_validation->set_rules('montant_impot_du','montant_impot_du','required');
        if($this->form_validation->run())     
        {  
                $current_time=date('Y-m-d H:i:s');
                $params = array(
					'devise_compte' => $this->input->post('devise_compte'),
					'fiche_sid' => $this->input->post('fiche_sid'),
					'numero_reference_note' => $this->input->post('numero_reference_note'),
					'date_validation' =>$current_time,
					'numero_impot' => $this->input->post('numero_impot'),
					'numero_compte_bancaire' => $this->input->post('numero_compte_bancaire'),
					'nom_banque' => $this->input->post('nom_banque'),
					'montant_impot_du' => $this->input->post('montant_impot_du'),
					'observation' => $this->input->post('observation'),
                );

                $this->Note_model->update_note($note_id,$params);            
                redirect('note/index');
            }
            else
            {
				$this->load->model('Fiche_model');
				$data['all_fiches'] = $this->Fiche_model->get_all_fiches();

                $data['_view'] = 'note/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The note you are trying to edit does not exist.');
    } 

    /*
     * Deleting note
     */
    function remove($note_id)
    {
        $note = $this->Note_model->get_note($note_id);

        // check if the note exists before trying to delete it
        if(isset($note['note_id']))
        {
            $this->Note_model->delete_note($note_id);
            redirect('note/index');
        }
        else
            show_error('The note you are trying to delete does not exist.');
    }
    
}
